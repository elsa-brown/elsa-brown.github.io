(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

console.log('running');

var r = 255;
var g = 255;
var b = 255;

var rEnd = false;
var gEnd = false;
var bEnd = false;

var cycle = 0;

var paint = function paint() {
	if (cycle === 0) {
		if (!gEnd) {
			if (g > 170) {
				g--;
				if (g === 170) {
					gEnd = true;
					cycle++;
				}
			}
		} else if (g < 255) {
			g++;
			if (g === 255) {
				gEnd = false;
				cycle--;
			}
		}
	} else if (cycle === 1) {
		if (!bEnd) {
			if (b > 155) {
				b--;
				if (g < 255) g++;
				if (b === 155) {
					bEnd = true;
					cycle++;
				}
			}
		} else {
			b--;
		}
	} else {
		if (!rEnd) {
			if (r > 155) {
				r--;
				if (r === 155) {
					rEnd = true;
				}
			}
		} else {
			if (r === 255 && b === 255 && g === 255) {
				rEnd = false;
				bEnd = false;
				gEnd = false;
				cycle = 0;
			} else if (b < 255) {
				b++;
			} else if (r < 255) {
				r++;
			} else if (r === 255) {
				rEnd = false;
				cycle--;
			}
		}
	}

	document.body.setAttribute('style', 'background: rgb(' + r + ', ' + g + ', ' + b);
};

setInterval(paint, 200);

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
